/*
호준이는 아르바이트로 영어 학원에서 단어 시험지를 채점하는 일을 하고 있다. 
호준이가 일하는 학원은 매번 1위부터 3위까지의 학생에게 상으로 사탕을 준다. 
그런데 오늘은 마침 사탕이 다 떨어져서 호준이가 채점을 하고 점수를 보내면, 
당신이 아이들의 숫자만큼 사탕을 사러 가기로 했다.

1위 ~ 3위 학생은 여러명일 수 있고 1~3위 학생 중 중복되는 학생까지 포함하여 사탕을 사기로 한다.
학생들의 점수를 공백으로 구분하여 입력을 받고 사탕을 받을 학생의 수를 출력하세요.

입출력

입력 : 97 86 75 66 55 97 85 97 97 95
출력 : 6

- 풀이 과정
1. 점수 정렬 : 학생들의 점수를 내림차순으로 정렬하여 높은 점수부터 순위를 판단할 수 있도록 함.
2. 중복 제거 : 중복된 점수를 제거. 이는 공동 순위까지 포함하기 위함
3. 상위 점수 추출 및 상위 점수 집합 구성 : 사탕을 받을 수 있는 점수 목록(=1~3위 점수들)을 기준으로 집합을 구성합니다.
4. 사탕 받을 학생 수 계산 : 전체 학생 점수 목록을 순회하면서, 상위 점수 목록에 해당하는 학생 수를 세어 사탕의 총 개수를 결정합니다.
*/

let scoreList = "97 86 75 66 55 97 85 97 97 95".split(" ").map(Number);
// 1. 내림차순 정렬
let scoreDesc = scoreList.sort((a, b) => b - a); // [97, 97, 97, 97, 95, 86, 85, 75, 66, 55 ] 

// 2. 중복제거
let scoreArr = scoreDesc.filter((score, index, arr) => arr.indexOf(score) == index); // [ 97, 95, 86, 85, 75, 66, 55 ]

// 3. 상위 3개 점수 추출
/* 
slice() : 원본 배열에 영향을 주지 않음.
slice(0, 3) : 0번째 인덱스부터 시작하여 3번째 인덱스 전까지의 요소 선택 후 다른 요소는 잘라내기
*/
let ranking3 = scoreArr.slice(0, 3); // [ 97, 95, 86 ]
let studentCount = 0;

// 4. 사탕을 받을 학생 수 계산
for(let i = 0; i < ranking3.length; i++) {
    for(let j = 0; j < scoreDesc.length; j++) {
        if(scoreDesc[j] == ranking3[i]) { // scoreDesc의 요소가 ranking3의 요소와 일치할 때 == 순위 3위 안에 해당
            studentCount++; // 학생 수 누적됨
        }
    }
}
console.log(studentCount);
